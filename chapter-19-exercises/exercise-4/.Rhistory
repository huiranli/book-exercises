View(total_health_costs)
# 6 filter the indicatorID with just "Total Spending"
health_costs <- high_income_indicators %>%
filter(indicatorID == "Total Spending")
geom_point(shape = indicator_id)
geom_point(shape = indicator_id)
geom_point(shape = indicator_id)
# 7 use the health_costs data frame as the data source
# 8
health_costs_plot <- ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)
# 7 use the health_costs data frame as the data source
# 8
health_costs_plot <- ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_point(shape =  health_costs$indicatorID)
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs) +
geom_point(mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID),
shape =  health_costs$indicatorID)
View(indicator_id)
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs) +
geom_point(mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID, health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs) +
geom_point(mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID, shape = health_costs$indicatorID))
# 6 filter the indicatorID with just "Total Spending"
total_health_costs <- high_income_indicators %>%
filter(indicatorID == "Total Spending")
# 3 accessing data of high income countries with the listed four indicators
# 4 arrange the data by the value
health_costs <- wb(country = "countries_only",
indicator = c("SH.XPD.CHEX.PC.CD", "SH.XPD.GHED.PC.CD", "SH.XPD.PVTD.PC.CD",
"SH.XPD.OOPC.PC.CD"),
mrv = 1,
cache = updated_cache) %>%
arrange(-value)
# 5 replace the indicatorID with readable names.
health_costs[health_costs$indicatorID == "SH.XPD.CHEX.PC.CD", "indicatorID"] <- "Total Spending"
health_costs[health_costs$indicatorID == "SH.XPD.GHED.PC.CD", "indicatorID"] <- "Government Spending"
health_costs[health_costs$indicatorID == "SH.XPD.PVTD.PC.CD", "indicatorID"] <- "Private Spending"
health_costs[health_costs$indicatorID == "SH.XPD.OOPC.PC.CD", "indicatorID"] <- "Out of Pocket Costs"
View(health_costs)
# 6 filter the indicatorID with just "Total Spending"
total_health_costs <- health_costs %>%
filter(indicatorID == "Total Spending")
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs) +
geom_point(mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID, shape = health_costs$indicatorID))
geom_point(shape = health_costs$indicatorID)
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs,
mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_point(shape = health_costs$indicatorID)
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_point(mapping9 = (shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_point(mapping = (shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
# geom_linerange(data = total_health_costs,
# mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = total_health_cost$value[1])) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = total_health_cost$value[[1]])) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = total_health_costs$value[1])) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(total_health_costs,
aes(ymin = 0, ymax = total_health_costs$value[1])) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = total_health_costs$value[1])) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = health_costs$indicatorID)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(data = total_health_costs,
mapping = aes(ymin = 0, ymax = total_health_costs$value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = total_health_costs$value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
high_income_iso3 <- select(high_income, iso3c)
View(high_income_iso3)
# 3 accessing data of high income countries with the listed four indicators
# 4 arrange the data by the value
health_costs <- wb(country = high_income_iso3,
indicator = c("SH.XPD.CHEX.PC.CD", "SH.XPD.GHED.PC.CD", "SH.XPD.PVTD.PC.CD",
"SH.XPD.OOPC.PC.CD"),
mrv = 1,
cache = updated_cache) %>%
arrange(-value)
View(high_income_indicators)
View(high_income_iso3)
# 3 accessing data of high income countries with the listed four indicators
# 4 arrange the data by the value
health_costs <- wb(country = high_income_iso3$iso3c,
indicator = c("SH.XPD.CHEX.PC.CD", "SH.XPD.GHED.PC.CD", "SH.XPD.PVTD.PC.CD",
"SH.XPD.OOPC.PC.CD"),
mrv = 1,
cache = updated_cache) %>%
arrange(-value)
# 5 replace the indicatorID with readable names.
health_costs[health_costs$indicatorID == "SH.XPD.CHEX.PC.CD", "indicatorID"] <- "Total Spending"
health_costs[health_costs$indicatorID == "SH.XPD.GHED.PC.CD", "indicatorID"] <- "Government Spending"
health_costs[health_costs$indicatorID == "SH.XPD.PVTD.PC.CD", "indicatorID"] <- "Private Spending"
health_costs[health_costs$indicatorID == "SH.XPD.OOPC.PC.CD", "indicatorID"] <- "Out of Pocket Costs"
# 6 filter the indicatorID with just "Total Spending"
total_health_costs <- health_costs %>%
filter(indicatorID == "Total Spending")
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID))
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID)) +
scale_colour_brewer(palette = "Dark")
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID)) +
scale_colour_brewer(palette = "Dark2")
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID)) +
scale_colour_brewer(palette = "Dark3")
# 7 use the health_costs data frame as the data source
# 8
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID)) +
scale_colour_brewer(palette = "Dark")
# 7 use the health_costs data frame as the data source
# 8
# 9
# 10
# 11
ggplot(data = health_costs, mapping = aes(x = reorder(iso3c, value), y = value, color = health_costs$indicatorID)) +
geom_linerange(mapping = aes(ymin = 0, ymax = value)) +
geom_point(mapping = aes(shape = health_costs$indicatorID)) +
scale_colour_brewer(palette = "Dark2")
install.packages(shiny)
install.packages(shiny)
install.packages(shiny)
install.packages("shiny")
install.packages("shiny") # once per machine
library("shiny") # load the package
runApp('Desktop/INFO201/book-exercises/chapter-19-exercises/exercise-2')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
setwd("~/Desktop/INFO201/book-exercises/chapter-19-exercises/exercise-4")
runApp()
runApp()
runApp()
runApp()
# Your `main_content`
growth_panel <- tabsetPanel(
title = "Growth Chart",
titlePanel("Income groeth 1980-2014"),
sidebarLayout(sidebar_content, main_content)
)
runApp()
runApp()
runApp()
runApp()
# Load libraries so they are available
library("shiny")
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
title = "Introduction",
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in
the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html",
"(source)") # what text to show
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
plotOutput(outputId = "plot"),
# A `plotOutput()` element showing the 'plot' output (defined in the server)
p(
"Data from",
a(href = "http://gabriel-zucman.eu/usdina/")
)
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
plotOutput(outputId = "plot"),
# A `plotOutput()` element showing the 'plot' output (defined in the server)
p(
"Data from",
a(href = "http://gabriel-zucman.eu/usdina/")
)
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
)
# Define a variable `growth_panel` for your second page. It should be a
# `tabPanel()` with a title "Growth Chart" to represent the second tab.
# This layout will contain the following elements:
sidebar_content <- sidebarPanel(
# A `titlePanel()` with the text "Income growth 1980-2014"
sliderInput(inputId = "percentile", label = "Income Percentile",
min = 0, max = 100, value = c(0, 100))
)
# Your `main_content`
growth_panel <- tabsetPanel(
title = "Growth Chart",
titlePanel("Income groeth 1980-2014"),
sidebarLayout(sidebar_content, main_content)
)
runApp()
